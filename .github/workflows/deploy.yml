name: Deploy concierge

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - README.md

jobs:
  docker:
    name: Docker Build & Deploy (ECR)
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Build & Push Action
        id: build
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ml/concierge
          registry: ${{ secrets.AWS_ECR_REGISTRY }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get First Tag
        id: tag
        run: |
          echo "TAGNAME=$(echo '${{ steps.build.outputs.TAGS }}' | cut -d ',' -f1)" >> $GITHUB_OUTPUT
      
      - name: Write Param
        id: param
        run: |
          aws ssm put-parameter --name "/d2/releases/${{ steps.build.outputs.IMAGENAME }}" --type "String" --value "${{ steps.build.outputs.IMAGEFULLNAME }}:${{ steps.tag.outputs.TAGNAME }}" --overwrite
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to D2 Concierge
        id: deploy-d2-concierge
        uses: enobrev/nomad-deploy-action@v0.3.6-beta
        with:
          job_name: concierge
          image_name: ${{ steps.build.outputs.IMAGEFULLNAME }}
          image_tag: ${{ steps.tag.outputs.TAGNAME }}
          nomad_addr: https://nomad.d2.welco.me
          nomad_region: d2
          nomad_namespace: default
          nomad_tag_label: me.welco.repo.tag
          sg_nomad_port: 443
          nomad_version: 1.1.3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECURITY_GROUP: ${{ secrets.D2_NOMAD_ADMIN_SG_ID }}  

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()